{%- liquid
  assign collections = collections
  assign count = collections.size

  if section.settings.collections != empty
    assign collections = section.settings.collections
    assign count = section.settings.collections.count
  endif

  assign columns_desktop = section.settings.columns_desktop | times: 1
  assign columns_mobile = section.settings.columns_mobile | times: 1
  assign paginate_by = columns_desktop | times: 5
-%}

<div {% render 'color-scheme-attributes' with scoped_settings: section.settings, borders: true %}>
  <div class="collection-grid padding--section gap--section" style="{% render 'padding-override' with settings: section.settings %}">
    {% content_for "block", type: "_section-header", id: "section-header" %}
    {%- paginate collections by paginate_by -%}
      {%- if count == 0 -%}
        <div class="container container--xl">
          <p>{{ 'collection_list.empty' | t }}</p>
        </div>
      {%- else -%}
        <div class="container container--{{ section.settings.container_type }} padding-text--{{ section.settings.container_type }}">
          <ul class="grid grid--text grid-cols-{{ columns_mobile }} lg:grid-cols-{{ columns_desktop }}">
            {%- for collection in collections -%}
              <li class="{{ section.settings.horizontal_alignment }}">
                {%- render 'card-collection', card_collection: collection -%}
              </li>
            {%- endfor -%}
          </ul>
        </div>
      {%- endif -%}
      {%- if paginate.pages > 1 -%}
        <div class="container container--xl">
          {%- render 'pagination', paginate: paginate -%}
        </div>
      {%- endif -%}
    {%- endpaginate -%}
  </div>
</div>

{% schema %}
{
  "name": "t:collection-list",
  "settings": [
    {
      "type": "collection_list",
      "id": "collections",
      "label": "t:collections"
    },
    {
      "type": "select",
      "id": "columns_desktop",
      "label": "t:desktop-columns",
      "default": "3",
      "options": [
        {
          "value": "2",
          "label": "t:two"
        },
        {
          "value": "3",
          "label": "t:three"
        },
        {
          "value": "4",
          "label": "t:four"
        }
      ]
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "t:mobile-columns",
      "default": "2",
      "options": [
        {
          "value": "1",
          "label": "t:one"
        },
        {
          "value": "2",
          "label": "t:two"
        }
      ]
    },
    {
      "type": "select",
      "id": "horizontal_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:left"
        },
        {
          "value": "center",
          "label": "t:center"
        },
        {
          "value": "right",
          "label": "t:right"
        }
      ],
      "default": "left",
      "label": "t:horizontal-alignment"
    },
    {
      "type": "select",
      "id": "container_type",
      "options": [
        {
          "value": "max",
          "label": "t:page-width"
        },
        {
          "value": "full",
          "label": "t:full-width"
        },
        {
          "value": "padded",
          "label": "t:full-width-padded"
        }
      ],
      "default": "max",
      "label": "t:container-type"
    },
    {
      "type": "header",
      "content": "t:colors"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:color-scheme",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "enable_color_scheme_transition",
      "label": "t:use-color-scheme-transition",
      "default": false
    },
    {
      "type": "color_scheme",
      "id": "color_scheme_transition",
      "label": "t:transition-color-scheme",
      "default": "scheme-2"
    },
    {
      "type": "header",
      "content": "t:padding"
    },
    {
      "type": "select",
      "id": "padding_top",
      "options": [
        {
          "value": "default",
          "label": "t:default"
        },
        {
          "value": "0px",
          "label": "t:none"
        },
        {
          "value": "var(--space-3xs)",
          "label": "t:xxxsmall"
        },
        {
          "value": "var(--space-2xs)",
          "label": "t:xxsmall"
        },
        {
          "value": "var(--space-xs)",
          "label": "t:xsmall"
        },
        {
          "value": "var(--space-s)",
          "label": "t:small"
        },
        {
          "value": "var(--space-m)",
          "label": "t:medium"
        },
        {
          "value": "var(--space-l)",
          "label": "t:large"
        },
        {
          "value": "var(--space-xl)",
          "label": "t:xlarge"
        },
        {
          "value": "var(--space-xl-2xl)",
          "label": "t:xxlarge"
        },
        {
          "value": "var(--space-2xl-3xl)",
          "label": "t:xxxlarge"
        }
      ],
      "default": "default",
      "label": "t:top-padding"
    },
    {
      "type": "select",
      "id": "padding_bottom",
      "options": [
        {
          "value": "default",
          "label": "t:default"
        },
        {
          "value": "0px",
          "label": "t:none"
        },
        {
          "value": "var(--space-3xs)",
          "label": "t:xxxsmall"
        },
        {
          "value": "var(--space-2xs)",
          "label": "t:xxsmall"
        },
        {
          "value": "var(--space-xs)",
          "label": "t:xsmall"
        },
        {
          "value": "var(--space-s)",
          "label": "t:small"
        },
        {
          "value": "var(--space-m)",
          "label": "t:medium"
        },
        {
          "value": "var(--space-l)",
          "label": "t:large"
        },
        {
          "value": "var(--space-xl)",
          "label": "t:xlarge"
        },
        {
          "value": "var(--space-xl-2xl)",
          "label": "t:xxlarge"
        },
        {
          "value": "var(--space-2xl-3xl)",
          "label": "t:xxxlarge"
        }
      ],
      "default": "default",
      "label": "t:bottom-padding"
    },
    {
      "type": "header",
      "content": "t:borders"
    },
    {
      "type": "checkbox",
      "id": "show_top_border",
      "label": "t:show-top-border",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_bottom_border",
      "label": "t:show-bottom-border",
      "default": false
    }
  ]
}
{% endschema %}